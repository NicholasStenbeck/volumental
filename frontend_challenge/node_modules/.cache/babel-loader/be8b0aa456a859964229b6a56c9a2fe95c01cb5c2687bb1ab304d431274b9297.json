{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/FeetScanPlaceholder/FeetScanPlaceholder.tsx\",\n  _s = $RefreshSig$();\nimport { css } from \"@emotion/css\";\nimport * as React from \"react\";\nimport { SceneManager } from \"./scene_manager\";\nimport { rootElement } from \"rootElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst styles = {\n  canvasContainer: css`\n    height: 100vh;\n    width: 100vw;\n    position: absolute;\n  `,\n  canvas: css`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow: visible;\n  `,\n  slider: css`\n    position: absolute;\n    cursor: ew-resize;\n    width: 40px;\n    height: 40px;\n    background-color: #1cb5d1;\n    opacity: 0.7;\n    border-radius: 50%;\n    top: calc(50% - 20px);\n    left: 50%;\n  `\n};\nexport const FeetScanPlaceholder = props => {\n  _s();\n  const containerRef = React.useRef(null);\n  const sliderRef = React.useRef(null);\n  React.useEffect(() => {\n    /**\n     * Use guard clause instead of nesting the rest of the code in an if statement.\n     * This improves readability and reduces nesting.\n     */\n    if (!containerRef.current || !sliderRef.current) {\n      return;\n    }\n\n    // For cleanup of event listeners\n    const currentSlider = sliderRef.current;\n    new SceneManager(containerRef.current, currentSlider, props.cameraPosition, props.sceneLBackground, props.sceneRBackground);\n    const onMouseMove = event => {\n      if (currentSlider) {\n        const sliderPos = Math.max(0, Math.min(rootElement.offsetWidth, event.pageX));\n        currentSlider.style.left = sliderPos - currentSlider.offsetWidth / 2 + \"px\";\n      }\n    };\n    const onMouseDown = event => {\n      rootElement.addEventListener(\"mousemove\", onMouseMove);\n      rootElement.addEventListener(\"mouseup\", onMouseUp);\n    };\n    const onMouseUp = event => {\n      rootElement.removeEventListener(\"mousemove\", onMouseMove);\n      rootElement.removeEventListener(\"mouseup\", onMouseUp);\n    };\n\n    /**\n     * Moved this function to a variable so we have a reference to it\n     * for unmounting without leaving the event listener running.\n     */\n    const onResize = () => {\n      if (currentSlider) {\n        currentSlider.style.left = `${Math.max(currentSlider.getBoundingClientRect().left, rootElement.offsetWidth / 2)}px`;\n      }\n    };\n    currentSlider.addEventListener(\"mousedown\", onMouseDown);\n    rootElement.addEventListener(\"resize\", onResize);\n    return () => {\n      currentSlider.removeEventListener(\"mousedown\", onMouseDown);\n      rootElement.removeEventListener(\"resize\", onResize);\n    };\n  }, [props]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.canvasContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.canvas,\n        id: \"canvas\",\n        ref: containerRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.slider,\n      id: \"slider\",\n      ref: sliderRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(FeetScanPlaceholder, \"8PiHHqFBp2916apaNCmDK6kAiEE=\");\n_c = FeetScanPlaceholder;\nvar _c;\n$RefreshReg$(_c, \"FeetScanPlaceholder\");","map":{"version":3,"names":["css","React","SceneManager","rootElement","styles","canvasContainer","canvas","slider","FeetScanPlaceholder","props","containerRef","useRef","sliderRef","useEffect","current","currentSlider","cameraPosition","sceneLBackground","sceneRBackground","onMouseMove","event","sliderPos","Math","max","min","offsetWidth","pageX","style","left","onMouseDown","addEventListener","onMouseUp","removeEventListener","onResize","getBoundingClientRect"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/FeetScanPlaceholder/FeetScanPlaceholder.tsx"],"sourcesContent":["import { css } from \"@emotion/css\";\nimport * as React from \"react\";\n\nimport { SceneManager } from \"./scene_manager\";\nimport { rootElement } from \"rootElement\";\n\nconst styles = {\n  canvasContainer: css`\n    height: 100vh;\n    width: 100vw;\n    position: absolute;\n  `,\n  canvas: css`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    top: 0;\n    left: 0;\n    overflow: visible;\n  `,\n  slider: css`\n    position: absolute;\n    cursor: ew-resize;\n    width: 40px;\n    height: 40px;\n    background-color: #1cb5d1;\n    opacity: 0.7;\n    border-radius: 50%;\n    top: calc(50% - 20px);\n    left: 50%;\n  `,\n};\n\ninterface FeetScanPlaceholderProps {\n  sceneLBackground: THREE.Color;\n  sceneRBackground: THREE.Color;\n  cameraPosition: {\n    x: number;\n    y: number;\n    z: number;\n  };\n}\n\nexport const FeetScanPlaceholder: React.FC<FeetScanPlaceholderProps> = (\n  props\n) => {\n  const containerRef = React.useRef<HTMLDivElement>(null);\n  const sliderRef = React.useRef<HTMLDivElement>(null);\n\n  React.useEffect(() => {\n    /**\n     * Use guard clause instead of nesting the rest of the code in an if statement.\n     * This improves readability and reduces nesting.\n     */\n    if (!containerRef.current || !sliderRef.current) {\n      return;\n    }\n\n    // For cleanup of event listeners\n    const currentSlider = sliderRef.current;\n\n    new SceneManager(\n      containerRef.current,\n      currentSlider,\n      props.cameraPosition,\n      props.sceneLBackground,\n      props.sceneRBackground\n    );\n\n    const onMouseMove = (event: MouseEvent) => {\n      if (currentSlider) {\n        const sliderPos = Math.max(\n          0,\n          Math.min(rootElement.offsetWidth, event.pageX)\n        );\n        currentSlider.style.left =\n          sliderPos - currentSlider.offsetWidth / 2 + \"px\";\n      }\n    };\n    const onMouseDown = (event: MouseEvent) => {\n      rootElement.addEventListener(\"mousemove\", onMouseMove);\n      rootElement.addEventListener(\"mouseup\", onMouseUp);\n    };\n    const onMouseUp = (event: MouseEvent) => {\n      rootElement.removeEventListener(\"mousemove\", onMouseMove);\n      rootElement.removeEventListener(\"mouseup\", onMouseUp);\n    };\n\n    /**\n     * Moved this function to a variable so we have a reference to it\n     * for unmounting without leaving the event listener running.\n     */\n    const onResize = () => {\n      if (currentSlider) {\n        currentSlider.style.left = `${Math.max(\n          currentSlider.getBoundingClientRect().left,\n          rootElement.offsetWidth / 2\n        )}px`;\n      }\n    };\n\n    currentSlider.addEventListener(\"mousedown\", onMouseDown);\n    rootElement.addEventListener(\"resize\", onResize);\n\n    return () => {\n      currentSlider.removeEventListener(\"mousedown\", onMouseDown);\n      rootElement.removeEventListener(\"resize\", onResize);\n    };\n  }, [props]);\n\n  return (\n    <>\n      <div className={styles.canvasContainer}>\n        <div className={styles.canvas} id=\"canvas\" ref={containerRef} />\n      </div>\n      <div className={styles.slider} id=\"slider\" ref={sliderRef} />\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}