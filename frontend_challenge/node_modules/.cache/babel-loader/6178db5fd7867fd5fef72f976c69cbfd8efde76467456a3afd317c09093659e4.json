{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx\";\nimport { css } from \"@emotion/css\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: css`\n    top: 0;\n    left: 0;\n    position: absolute;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 1rem;\n    padding: 2rem;\n    box-sizing: border-box;\n\n    max-height: 100%;\n    overflow-y: auto;\n\n    /*\n    * Would use container query, as it is supported by all major browsers,\n    * but it is not supported by emotion yet.\n    */\n    @media (min-width: 768px) {\n      grid-template-columns: 1fr 1fr;\n    }\n  `,\n  measurement: css`\n    padding: 0 1rem;\n    background: white;\n    border-radius: 0.25rem;\n    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.3);\n    transition: transform 0.2s ease-in-out;\n    text-transform: uppercase;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  `,\n  measurementTitle: css`\n    font-size: 1rem;\n  `,\n  measurementSubtitle: css`\n    font-size: 0.75rem;\n    margin-top: -0.75rem;\n    color: #444;\n  `\n};\nexport const Measurements = _ref => {\n  let {\n    measurements\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: measurements.map(measurement => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.measurement,\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.measurementTitle,\n          children: measurement.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.measurementSubtitle,\n          children: measurement.subTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: measurement.active\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, measurement.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_c = Measurements;\nvar _c;\n$RefreshReg$(_c, \"Measurements\");","map":{"version":3,"names":["css","React","styles","container","measurement","measurementTitle","measurementSubtitle","Measurements","measurements","map","title","subTitle","active","id"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx"],"sourcesContent":["import { css } from \"@emotion/css\";\nimport * as React from \"react\";\n\nimport dummy_measurements from \"dummy_measurements.json\";\n\nconst styles = {\n  container: css`\n    top: 0;\n    left: 0;\n    position: absolute;\n    display: grid;\n    grid-template-columns: 1fr;\n    grid-gap: 1rem;\n    padding: 2rem;\n    box-sizing: border-box;\n\n    max-height: 100%;\n    overflow-y: auto;\n\n    /*\n    * Would use container query, as it is supported by all major browsers,\n    * but it is not supported by emotion yet.\n    */\n    @media (min-width: 768px) {\n      grid-template-columns: 1fr 1fr;\n    }\n  `,\n  measurement: css`\n    padding: 0 1rem;\n    background: white;\n    border-radius: 0.25rem;\n    box-shadow: 0 0 0.5rem rgba(0, 0, 0, 0.3);\n    transition: transform 0.2s ease-in-out;\n    text-transform: uppercase;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n\n    &:hover {\n      transform: scale(1.05);\n    }\n  `,\n  measurementTitle: css`\n    font-size: 1rem;\n  `,\n  measurementSubtitle: css`\n    font-size: 0.75rem;\n    margin-top: -0.75rem;\n    color: #444;\n  `,\n};\n\ninterface MeasurementsProps {\n  measurements: typeof dummy_measurements.data;\n}\n\nexport const Measurements: React.FC<MeasurementsProps> = ({\n  measurements,\n}: MeasurementsProps) => {\n  return (\n    <div className={styles.container}>\n      {measurements.map((measurement) => {\n        return (\n          <div className={styles.measurement} key={measurement.id}>\n            <h2 className={styles.measurementTitle}>{measurement.title}</h2>\n            <p className={styles.measurementSubtitle}>{measurement.subTitle}</p>\n            <p>{measurement.active}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAI/B,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAEH,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACDI,WAAW,EAAEJ,GAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACDK,gBAAgB,EAAEL,GAAI;AACxB;AACA,GAAG;EACDM,mBAAmB,EAAEN,GAAI;AAC3B;AACA;AACA;AACA;AACA,CAAC;AAMD,OAAO,MAAMO,YAAyC,GAAG,QAEhC;EAAA,IAFiC;IACxDC;EACiB,CAAC;EAClB,oBACE;IAAK,SAAS,EAAEN,MAAM,CAACC,SAAU;IAAA,UAC9BK,YAAY,CAACC,GAAG,CAAEL,WAAW,IAAK;MACjC,oBACE;QAAK,SAAS,EAAEF,MAAM,CAACE,WAAY;QAAA,wBACjC;UAAI,SAAS,EAAEF,MAAM,CAACG,gBAAiB;UAAA,UAAED,WAAW,CAACM;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAChE;UAAG,SAAS,EAAER,MAAM,CAACI,mBAAoB;UAAA,UAAEF,WAAW,CAACO;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACpE;UAAA,UAAIP,WAAW,CAACQ;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAHYR,WAAW,CAACS,EAAE;QAAA;QAAA;QAAA;MAAA,QAIjD;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAhBWN,YAAyC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}