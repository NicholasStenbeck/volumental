{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx\";\nimport { css } from \"@emotion/css\";\nimport * as React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: css`\n    top: 2rem;\n    left: 2rem;\n    position: absolute;\n  `\n};\nexport const Measurements = _ref => {\n  let {\n    measurements\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: measurements.map(measurement => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: measurement.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: measurement.active\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)]\n      }, measurement.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_c = Measurements;\nvar _c;\n$RefreshReg$(_c, \"Measurements\");","map":{"version":3,"names":["css","React","styles","container","Measurements","measurements","map","measurement","title","active","id"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx"],"sourcesContent":["import { css } from \"@emotion/css\";\nimport * as React from \"react\";\n\nimport dummy_measurements from \"dummy_measurements.json\";\n\nconst styles = {\n  container: css`\n    top: 2rem;\n    left: 2rem;\n    position: absolute;\n  `,\n};\n\ninterface MeasurementsProps {\n  measurements: typeof dummy_measurements.data;\n}\n\nexport const Measurements: React.FC<MeasurementsProps> = ({\n  measurements,\n}: MeasurementsProps) => {\n  return (\n    <div>\n      {measurements.map((measurement) => {\n        return (\n          <div key={measurement.id}>\n            <p>{measurement.title}</p>\n            <p>{measurement.active}</p>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC;AAI/B,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAEH,GAAI;AACjB;AACA;AACA;AACA;AACA,CAAC;AAMD,OAAO,MAAMI,YAAyC,GAAG,QAEhC;EAAA,IAFiC;IACxDC;EACiB,CAAC;EAClB,oBACE;IAAA,UACGA,YAAY,CAACC,GAAG,CAAEC,WAAW,IAAK;MACjC,oBACE;QAAA,wBACE;UAAA,UAAIA,WAAW,CAACC;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eAC1B;UAAA,UAAID,WAAW,CAACE;QAAM;UAAA;UAAA;UAAA;QAAA,QAAK;MAAA,GAFnBF,WAAW,CAACG,EAAE;QAAA;QAAA;QAAA;MAAA,QAGlB;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,KAfWN,YAAyC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}