{"ast":null,"code":"/* tslint:disable */\n\nimport { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, Points, PointsMaterial, Vector3 } from 'three';\nlet OBJLoader = function () {\n  // o object_name | g group_name\n  let object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  let material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  let material_use_pattern = /^usemtl /;\n  // usemap map_name\n  let map_use_pattern = /^usemap /;\n  let vA = new Vector3();\n  let vB = new Vector3();\n  let vC = new Vector3();\n  let ab = new Vector3();\n  let cb = new Vector3();\n  function ParserState() {\n    let state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materials: {},\n      materialLibraries: [],\n      startObject: function (name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n        let previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n            hasUVIndices: false\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function (name, libraries) {\n            let previous = this._finalize(false);\n\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n            let material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function (index) {\n                let cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function () {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n            return undefined;\n          },\n          _finalize: function (end) {\n            let lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            }\n\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n              for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            }\n\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n            return lastMultiMaterial;\n          }\n        };\n\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          let declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n        this.objects.push(this.object);\n      },\n      finalize: function () {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function (value, len) {\n        let index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function (value, len) {\n        let index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function (value, len) {\n        let index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function (a, b, c) {\n        let src = this.vertices;\n        let dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function (a) {\n        let src = this.vertices;\n        let dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function (a) {\n        let src = this.vertices;\n        let dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function (a, b, c) {\n        let src = this.normals;\n        let dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addFaceNormal: function (a, b, c) {\n        let src = this.vertices;\n        let dst = this.object.geometry.normals;\n        vA.fromArray(src, a);\n        vB.fromArray(src, b);\n        vC.fromArray(src, c);\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n      },\n      addColor: function (a, b, c) {\n        let src = this.colors;\n        let dst = this.object.geometry.colors;\n        if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function (a, b, c) {\n        let src = this.uvs;\n        let dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addDefaultUV: function () {\n        let dst = this.object.geometry.uvs;\n        dst.push(0, 0);\n        dst.push(0, 0);\n        dst.push(0, 0);\n      },\n      addUVLine: function (a) {\n        let src = this.uvs;\n        let dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n        let vLen = this.vertices.length;\n        let ia = this.parseVertexIndex(a, vLen);\n        let ib = this.parseVertexIndex(b, vLen);\n        let ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n        this.addColor(ia, ib, ic);\n\n        // normals\n\n        if (na !== undefined && na !== '') {\n          let nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = this.parseNormalIndex(nb, nLen);\n          ic = this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        } else {\n          this.addFaceNormal(ia, ib, ic);\n        }\n\n        // uvs\n\n        if (ua !== undefined && ua !== '') {\n          let uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n          this.object.geometry.hasUVIndices = true;\n        } else {\n          // add placeholder values (for inconsistent face definitions)\n\n          this.addDefaultUV();\n        }\n      },\n      addPointGeometry: function (vertices) {\n        this.object.geometry.type = 'Points';\n        let vLen = this.vertices.length;\n        for (let vi = 0, l = vertices.length; vi < l; vi++) {\n          let index = this.parseVertexIndex(vertices[vi], vLen);\n          this.addVertexPoint(index);\n          this.addColor(index);\n        }\n      },\n      addLineGeometry: function (vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        let vLen = this.vertices.length;\n        let uvLen = this.uvs.length;\n        for (let vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n        for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  }\n\n  //\n\n  function OBJLoader(manager) {\n    Loader.call(this, manager);\n    this.materials = null;\n  }\n  OBJLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: OBJLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      let scope = this;\n      let loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    setMaterials: function (materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function (text) {\n      let state = new ParserState();\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n      let lines = text.split('\\n');\n      let line = '',\n        lineFirstChar = '';\n      let lineLength = 0;\n      let result = [];\n\n      // Faster to just trim left side of the line. Use if available.\n      let trimLeft = typeof ''.trimLeft === 'function';\n      for (let i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0);\n\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n        if (lineFirstChar === 'v') {\n          let data = line.split(/\\s+/);\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n\n                state.colors.push(undefined, undefined, undefined);\n              }\n              break;\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n            default:\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          let lineData = line.substr(1).trim();\n          let vertexData = lineData.split(/\\s+/);\n          let faceVertices = [];\n\n          // Parse the face vertex data into an easy to work with format\n\n          for (let j = 0, jl = vertexData.length; j < jl; j++) {\n            let vertex = vertexData[j];\n            if (vertex.length > 0) {\n              let vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n          let v1 = faceVertices[0];\n          for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            let v2 = faceVertices[j];\n            let v3 = faceVertices[j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          let lineParts = line.substring(1).trim().split(' ');\n          let lineVertices = [],\n            lineUVs = [];\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (let li = 0, llen = lineParts.length; li < llen; li++) {\n              let parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          let lineData = line.substr(1).trim();\n          let pointData = lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // let name = result[ 0 ].substr( 1 ).trim();\n          let name = (' ' + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' ');\n\n          // smooth shading\n\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n          if (result.length > 1) {\n            let value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          let material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n      state.finalize();\n      let container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      let hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n      if (hasPrimitives === true) {\n        for (let i = 0, l = state.objects.length; i < l; i++) {\n          let object = state.objects[i];\n          let geometry = object.geometry;\n          let materials = object.materials;\n          let isLine = geometry.type === 'Line';\n          let isPoints = geometry.type === 'Points';\n          let hasVertexColors = false;\n\n          // Skip o/g line declarations that did not follow with any faces\n          if (geometry.vertices.length === 0) continue;\n          let buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          }\n\n          // Create materials\n\n          let createdMaterials = [];\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            let sourceMaterial = materials[mi];\n            let materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            let material = state.materials[materialHash];\n            if (this.materials !== null) {\n              material = this.materials.create(sourceMaterial.name);\n\n              // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n              if (isLine && material && !(material instanceof LineBasicMaterial)) {\n                let materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, material);\n                materialLine.color.copy(material.color);\n                material = materialLine;\n              } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n                let materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, material);\n                materialPoints.color.copy(material.color);\n                materialPoints.map = material.map;\n                material = materialPoints;\n              }\n            }\n            if (material === undefined) {\n              if (isLine) {\n                material = new LineBasicMaterial();\n              } else if (isPoints) {\n                material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                material = new MeshPhongMaterial();\n              }\n              material.name = sourceMaterial.name;\n              material.flatShading = sourceMaterial.smooth ? false : true;\n              material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = material;\n            }\n            createdMaterials.push(material);\n          }\n\n          // Create mesh\n\n          let mesh;\n          if (createdMaterials.length > 1) {\n            for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n              let sourceMaterial = materials[mi];\n              buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n            }\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n        if (state.vertices.length > 0) {\n          let material = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          let buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            material.vertexColors = true;\n          }\n          let points = new Points(buffergeometry, material);\n          container.add(points);\n        }\n      }\n      return container;\n    }\n  });\n  return OBJLoader;\n}();\nexport { OBJLoader };","map":{"version":3,"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","Points","PointsMaterial","Vector3","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","vA","vB","vC","ab","cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","materialLine","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/FeetScanPlaceholder/external_tools/OBJLoader.js"],"sourcesContent":["/* tslint:disable */\n\nimport {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3\n} from 'three';\n\nlet OBJLoader = ( function () {\n\n\t// o object_name | g group_name\n\tlet object_pattern = /^[og]\\s*(.+)?/;\n\t// mtllib file_reference\n\tlet material_library_pattern = /^mtllib /;\n\t// usemtl material_name\n\tlet material_use_pattern = /^usemtl /;\n\t// usemap map_name\n\tlet map_use_pattern = /^usemap /;\n\n\tlet vA = new Vector3();\n\tlet vB = new Vector3();\n\tlet vC = new Vector3();\n\n\tlet ab = new Vector3();\n\tlet cb = new Vector3();\n\n\tfunction ParserState() {\n\n\t\tlet state = {\n\t\t\tobjects: [],\n\t\t\tobject: {},\n\n\t\t\tvertices: [],\n\t\t\tnormals: [],\n\t\t\tcolors: [],\n\t\t\tuvs: [],\n\n\t\t\tmaterials: {},\n\t\t\tmaterialLibraries: [],\n\n\t\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\t\tthis.object.name = name;\n\t\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tlet previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t\tthis.object = {\n\t\t\t\t\tname: name || '',\n\t\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\t\tgeometry: {\n\t\t\t\t\t\tvertices: [],\n\t\t\t\t\t\tnormals: [],\n\t\t\t\t\t\tcolors: [],\n\t\t\t\t\t\tuvs: [],\n\t\t\t\t\t\thasUVIndices: false\n\t\t\t\t\t},\n\t\t\t\t\tmaterials: [],\n\t\t\t\t\tsmooth: true,\n\n\t\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\t\tlet previous = this._finalize( false );\n\n\t\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlet material = {\n\t\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\t\tlet cloned = {\n\t\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\t\treturn material;\n\n\t\t\t\t\t},\n\n\t\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn undefined;\n\n\t\t\t\t\t},\n\n\t\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\t\tlet lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t// Inherit previous objects material.\n\t\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\t\tlet declared = previousMaterial.clone( 0 );\n\t\t\t\t\tdeclared.inherited = true;\n\t\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t\t}\n\n\t\t\t\tthis.objects.push( this.object );\n\n\t\t\t},\n\n\t\t\tfinalize: function () {\n\n\t\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\t\tthis.object._finalize( true );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\t\tlet index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\t\tlet index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t\t},\n\n\t\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\t\tlet index = parseInt( value, 10 );\n\t\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t\t},\n\n\t\t\taddVertex: function ( a, b, c ) {\n\n\t\t\t\tlet src = this.vertices;\n\t\t\t\tlet dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexPoint: function ( a ) {\n\n\t\t\t\tlet src = this.vertices;\n\t\t\t\tlet dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddVertexLine: function ( a ) {\n\n\t\t\t\tlet src = this.vertices;\n\t\t\t\tlet dst = this.object.geometry.vertices;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t\t},\n\n\t\t\taddNormal: function ( a, b, c ) {\n\n\t\t\t\tlet src = this.normals;\n\t\t\t\tlet dst = this.object.geometry.normals;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\t\tlet src = this.vertices;\n\t\t\t\tlet dst = this.object.geometry.normals;\n\n\t\t\t\tvA.fromArray( src, a );\n\t\t\t\tvB.fromArray( src, b );\n\t\t\t\tvC.fromArray( src, c );\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\t\t\t\tdst.push( cb.x, cb.y, cb.z );\n\n\t\t\t},\n\n\t\t\taddColor: function ( a, b, c ) {\n\n\t\t\t\tlet src = this.colors;\n\t\t\t\tlet dst = this.object.geometry.colors;\n\n\t\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t\t},\n\n\t\t\taddUV: function ( a, b, c ) {\n\n\t\t\t\tlet src = this.uvs;\n\t\t\t\tlet dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t\t},\n\n\t\t\taddDefaultUV: function () {\n\n\t\t\t\tlet dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\t\t\t\tdst.push( 0, 0 );\n\n\t\t\t},\n\n\t\t\taddUVLine: function ( a ) {\n\n\t\t\t\tlet src = this.uvs;\n\t\t\t\tlet dst = this.object.geometry.uvs;\n\n\t\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t\t},\n\n\t\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\t\tlet vLen = this.vertices.length;\n\n\t\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\t\tlet nLen = this.normals.length;\n\n\t\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t\t}\n\n\t\t\t\t// uvs\n\n\t\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\t\tlet uvLen = this.uvs.length;\n\n\t\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\t\tthis.addDefaultUV();\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\t\tlet vLen = this.vertices.length;\n\n\t\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tlet index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\t\tthis.addColor( index );\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\t\tlet vLen = this.vertices.length;\n\t\t\t\tlet uvLen = this.uvs.length;\n\n\t\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tstate.startObject( '', false );\n\n\t\treturn state;\n\n\t}\n\n\t//\n\n\tfunction OBJLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tOBJLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: OBJLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tlet scope = this;\n\n\t\t\tlet loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setRequestHeader( this.requestHeader );\n\t\t\tloader.setWithCredentials( this.withCredentials );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetMaterials: function ( materials ) {\n\n\t\t\tthis.materials = materials;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( text ) {\n\n\t\t\tlet state = new ParserState();\n\n\t\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t\t}\n\n\t\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t\t}\n\n\t\t\tlet lines = text.split( '\\n' );\n\t\t\tlet line = '', lineFirstChar = '';\n\t\t\tlet lineLength = 0;\n\t\t\tlet result = [];\n\n\t\t\t// Faster to just trim left side of the line. Use if available.\n\t\t\tlet trimLeft = ( typeof ''.trimLeft === 'function' );\n\n\t\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\t\tline = lines[ i ];\n\n\t\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\n\n\t\t\t\tlineLength = line.length;\n\n\t\t\t\tif ( lineLength === 0 ) continue;\n\n\t\t\t\tlineFirstChar = line.charAt( 0 );\n\n\t\t\t\t// @todo invoke passed in handler if any\n\t\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\t\tlet data = line.split( /\\s+/ );\n\n\t\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\t\tcase 'v':\n\t\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t\tstate.colors.push(\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\n\t\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\t\tlet lineData = line.substr( 1 ).trim();\n\t\t\t\t\tlet vertexData = lineData.split( /\\s+/ );\n\t\t\t\t\tlet faceVertices = [];\n\n\t\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tlet vertex = vertexData[ j ];\n\n\t\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\t\tlet vertexParts = vertex.split( '/' );\n\t\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\t\tlet v1 = faceVertices[ 0 ];\n\n\t\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\t\tlet v2 = faceVertices[ j ];\n\t\t\t\t\t\tlet v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\t\tlet lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\t\tlet lineVertices = [], lineUVs = [];\n\n\t\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\t\tlet parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\t\tlet lineData = line.substr( 1 ).trim();\n\t\t\t\t\tlet pointData = lineData.split( ' ' );\n\n\t\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t\t} else if ( ( result = object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t\t// o object_name\n\t\t\t\t\t// or\n\t\t\t\t\t// g group_name\n\n\t\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t\t// let name = result[ 0 ].substr( 1 ).trim();\n\t\t\t\t\tlet name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\n\n\t\t\t\t\tstate.startObject( name );\n\n\t\t\t\t} else if ( material_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// material\n\n\t\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t\t} else if ( material_library_pattern.test( line ) ) {\n\n\t\t\t\t\t// mtl file\n\n\t\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t\t} else if ( map_use_pattern.test( line ) ) {\n\n\t\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t\t// smooth shading\n\n\t\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\t\tlet value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet material = state.object.currentMaterial();\n\t\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Handle null terminated files without exception\n\t\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.finalize();\n\n\t\t\tlet container = new Group();\n\t\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\t\tlet hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\t\tif ( hasPrimitives === true ) {\n\n\t\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\t\tlet object = state.objects[ i ];\n\t\t\t\t\tlet geometry = object.geometry;\n\t\t\t\t\tlet materials = object.materials;\n\t\t\t\t\tlet isLine = ( geometry.type === 'Line' );\n\t\t\t\t\tlet isPoints = ( geometry.type === 'Points' );\n\t\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\t\tlet buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create materials\n\n\t\t\t\t\tlet createdMaterials = [];\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tlet sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tlet materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\t\tlet materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\t\tlet materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Create mesh\n\n\t\t\t\t\tlet mesh;\n\n\t\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\t\tlet sourceMaterial = materials[ mi ];\n\t\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = object.name;\n\n\t\t\t\t\tcontainer.add( mesh );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\t\tlet material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\tlet buffergeometry = new BufferGeometry();\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlet points = new Points( buffergeometry, material );\n\t\t\t\t\tcontainer.add( points );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn container;\n\n\t\t}\n\n\t} );\n\n\treturn OBJLoader;\n\n} )();\n\nexport { OBJLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}