{"ast":null,"code":"import * as THREE from 'three';\nimport { OBJLoader } from '../external_tools/OBJLoader';\nimport { OrbitControls } from '../external_tools/OrbitControls';\nfunction parseMatrix(value) {\n  const m = new THREE.Matrix4();\n  m.set(value[0][0], value[0][1], value[0][2], value[0][3], value[1][0], value[1][1], value[1][2], value[1][3], value[2][0], value[2][1], value[2][2], value[2][3], value[3][0], value[3][1], value[3][2], value[3][3]);\n  return m;\n}\nexport class SceneManager {\n  constructor(container, viewSlider, cameraPosition, sceneLBackground, sceneRBackground) {\n    this.container = void 0;\n    this.viewSlider = void 0;\n    this.animationFrameId = void 0;\n    this.sceneL = void 0;\n    this.camera = void 0;\n    this.renderer = void 0;\n    this.baseFootRoot = {\n      left: new THREE.Group(),\n      right: new THREE.Group()\n    };\n    this.controls = void 0;\n    this.footMaterial = new THREE.MeshStandardMaterial({\n      color: new THREE.Color(1, 1, 1)\n    });\n    this.sceneR = new THREE.Scene();\n    this.footMaterialAlternative = new THREE.MeshStandardMaterial({\n      color: new THREE.Color(1, 1, 1),\n      emissive: new THREE.Color(0x385E77),\n      roughness: 0.5\n    });\n    this.initAlternativeScene = bgColor => {\n      /**\n       * Alternative Scene\n       * --------------------------\n       * Bonus: experiment with the scene\n       */\n      this.sceneR.copy(this.sceneL, true);\n      this.sceneR.traverse(object => {\n        if (object.name === 'foot' && object instanceof THREE.Mesh) {\n          object.material = this.footMaterialAlternative;\n          object.material.wireframe = true;\n        }\n      });\n      this.sceneR.background = new THREE.Color(bgColor);\n    };\n    this.addLights = () => {\n      const lights = {\n        ambient: 0x444444,\n        directional: {\n          z: 0.6,\n          intensity: 0.22,\n          color: 0xffffff\n        }\n      };\n      this.sceneL.add(new THREE.AmbientLight(lights.ambient));\n\n      // spotlights\n      const z = lights.directional.z;\n      const intensity = lights.directional.intensity;\n      const color = lights.directional.color;\n      const createDirectionalLight = (color, intensity, x, y, z) => {\n        const directionalLight = new THREE.DirectionalLight(color, intensity);\n        directionalLight.position.set(x, y, z);\n        return directionalLight;\n      };\n      this.sceneL.add(createDirectionalLight(color, intensity, -0.3, -0.3, z));\n      this.sceneL.add(createDirectionalLight(color, intensity, 0.3, -0.3, z));\n      this.sceneL.add(createDirectionalLight(color, intensity, -0.3, 0.3, z));\n      this.sceneL.add(createDirectionalLight(color, intensity, 0.3, 0.3, z));\n    };\n    this.loadAllFeet = async () => {\n      await Promise.all([this.loadFootMesh('left'), this.loadFootMesh('right')]);\n      await this.loadScene();\n    };\n    this.loadFootMesh = async side => {\n      const blobUrl = `./models/${side}.obj`;\n      const loader = new OBJLoader();\n      try {\n        const object = await new Promise(resolve => loader.load(blobUrl, object => resolve(object)));\n        object.traverse(mesh => {\n          if (mesh instanceof THREE.Mesh) {\n            mesh.name = 'foot';\n            mesh.userData = {\n              side\n            };\n            mesh.material = this.footMaterial;\n            mesh.material.opacity = 1.0;\n            mesh.material.transparent = true;\n          }\n        });\n        object.userData = {\n          side\n        };\n        this.baseFootRoot[side].add(object);\n      } catch (error) {\n        console.error('load foot mesh failed', error);\n      }\n    };\n    this.loadScene = async () => {\n      const blobUrl = `./models/scene.json`;\n      try {\n        const response = await fetch(blobUrl);\n        if (!response.ok) {\n          throw Error(response.statusText);\n        }\n        const data = await response.json();\n        const matrixL = parseMatrix(data.world_from_foot.left);\n        this.baseFootRoot.left.children.forEach(foot => {\n          foot.matrix = matrixL;\n          foot.matrixAutoUpdate = false;\n        });\n        const matrixR = parseMatrix(data.world_from_foot.right);\n        this.baseFootRoot.right.children.forEach(foot => {\n          foot.matrix = matrixR;\n          foot.matrixAutoUpdate = false;\n        });\n      } catch (error) {\n        console.error('load scene json failed', error);\n      }\n    };\n    this.animate = () => {\n      if (!this.container) {\n        return;\n      }\n      const sliderPos = this.viewSlider.getBoundingClientRect().x + 20;\n      this.renderer.setScissor(0, 0, sliderPos, window.innerHeight);\n      this.renderer.render(this.sceneL, this.camera);\n      this.renderer.setScissor(sliderPos, 0, window.innerWidth, window.innerHeight);\n      this.renderer.setScissorTest(true);\n      this.renderer.render(this.sceneR, this.camera);\n      if (this.controls) {\n        this.controls.update();\n      }\n      this.animationFrameId = requestAnimationFrame(() => this.animate());\n    };\n    this.container = container;\n    this.viewSlider = viewSlider;\n\n    // Init scenes\n    const aspect = this.container.clientWidth / this.container.clientHeight || 1;\n    this.sceneL = new THREE.Scene();\n    this.sceneL.background = sceneLBackground;\n    this.camera = new THREE.PerspectiveCamera(50, aspect, 0.1, 10);\n    this.camera.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n    this.camera.up.set(0, 0, 1);\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    this.container.appendChild(this.renderer.domElement);\n    this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.updateRendererSize();\n    window.addEventListener('resize', () => this.updateRendererSize());\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.sceneL.add(this.baseFootRoot.left);\n    this.sceneL.add(this.baseFootRoot.right);\n    this.addLights();\n    this.loadAllFeet().then(() => {\n      this.initAlternativeScene(sceneRBackground);\n      this.animate();\n    });\n  }\n  updateRendererSize() {\n    const container = this.container;\n    if (!container) {\n      console.warn('Update renderer size failed: canvas not found');\n      return;\n    }\n    const width = container.clientWidth;\n    const height = container.clientHeight;\n    if (!width || !height) {\n      console.log(`bad dimensions: ${width}x${height}`);\n    } else {\n      this.camera['aspect'] = width / height;\n      this.renderer.setSize(width, height);\n      this.camera.updateProjectionMatrix();\n    }\n  }\n}\n;","map":{"version":3,"names":["THREE","OBJLoader","OrbitControls","parseMatrix","value","m","Matrix4","set","SceneManager","constructor","container","viewSlider","cameraPosition","sceneLBackground","sceneRBackground","animationFrameId","sceneL","camera","renderer","baseFootRoot","left","Group","right","controls","footMaterial","MeshStandardMaterial","color","Color","sceneR","Scene","footMaterialAlternative","emissive","roughness","initAlternativeScene","bgColor","copy","traverse","object","name","Mesh","material","wireframe","background","addLights","lights","ambient","directional","z","intensity","add","AmbientLight","createDirectionalLight","x","y","directionalLight","DirectionalLight","position","loadAllFeet","Promise","all","loadFootMesh","loadScene","side","blobUrl","loader","resolve","load","mesh","userData","opacity","transparent","error","console","response","fetch","ok","Error","statusText","data","json","matrixL","world_from_foot","children","forEach","foot","matrix","matrixAutoUpdate","matrixR","animate","sliderPos","getBoundingClientRect","setScissor","window","innerHeight","render","innerWidth","setScissorTest","update","requestAnimationFrame","aspect","clientWidth","clientHeight","PerspectiveCamera","up","lookAt","Vector3","WebGLRenderer","alpha","appendChild","domElement","setSize","setPixelRatio","devicePixelRatio","updateRendererSize","addEventListener","then","warn","width","height","log","updateProjectionMatrix"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/FeetScanPlaceholder/scene_manager/index.ts"],"sourcesContent":["import * as THREE from 'three';\n\nimport { OBJLoader } from '../external_tools/OBJLoader';\nimport { OrbitControls } from '../external_tools/OrbitControls';\n\nfunction parseMatrix(value: number[][]): THREE.Matrix4 {\n  const m = new THREE.Matrix4();\n  m.set(\n    value[0][0], value[0][1], value[0][2], value[0][3],\n    value[1][0], value[1][1], value[1][2], value[1][3],\n    value[2][0], value[2][1], value[2][2], value[2][3],\n    value[3][0], value[3][1], value[3][2], value[3][3]);\n  return m;\n}\n\nexport class SceneManager {\n  container: HTMLDivElement;\n  viewSlider: HTMLDivElement;\n  animationFrameId?: number;\n  sceneL: THREE.Scene;\n  camera: THREE.PerspectiveCamera;\n  renderer: THREE.WebGLRenderer;\n  baseFootRoot = { left: new THREE.Group(), right: new THREE.Group() };\n  controls?: OrbitControls;\n  footMaterial = new THREE.MeshStandardMaterial({ color: new THREE.Color(1, 1, 1) });\n\n  sceneR: THREE.Scene = new THREE.Scene();\n  footMaterialAlternative = new THREE.MeshStandardMaterial({\n    color: new THREE.Color(1, 1, 1),\n    emissive: new THREE.Color(0x385E77),\n    roughness: 0.5,\n  });\n\n  constructor(\n    container:  HTMLDivElement,\n    viewSlider: HTMLDivElement,\n    cameraPosition: {\n      x: number;\n      y: number;\n      z: number;\n    },\n    sceneLBackground: THREE.Color,\n    sceneRBackground: THREE.Color,\n  ) {\n    this.container = container;\n    this.viewSlider = viewSlider;\n\n    // Init scenes\n    const aspect = (this.container.clientWidth / this.container.clientHeight) || 1;\n    this.sceneL = new THREE.Scene();\n    this.sceneL.background = sceneLBackground;\n    this.camera = new THREE.PerspectiveCamera(50, aspect, 0.1, 10);\n    this.camera.position.set(\n      cameraPosition.x,\n      cameraPosition.y,\n      cameraPosition.z,\n    );\n    this.camera.up.set( 0, 0, 1 );\n    this.camera.lookAt(new THREE.Vector3(0, 0, 0));\n    this.renderer = new THREE.WebGLRenderer({\n      alpha: true,\n    });\n    this.container.appendChild(this.renderer.domElement);\n    this.renderer.setSize(this.container.clientWidth, this.container.clientHeight);\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.updateRendererSize();\n    window.addEventListener('resize', () => this.updateRendererSize());\n    this.controls = new OrbitControls(this.camera, this.renderer.domElement);\n    this.sceneL.add(this.baseFootRoot.left);\n    this.sceneL.add(this.baseFootRoot.right);\n    this.addLights();\n    this.loadAllFeet().then(() => {\n      this.initAlternativeScene(sceneRBackground);\n      this.animate();\n    });\n  }\n\n  initAlternativeScene = (bgColor) => {\n    /**\n     * Alternative Scene\n     * --------------------------\n     * Bonus: experiment with the scene\n     */\n    this.sceneR.copy(\n      this.sceneL,\n      true,\n    );\n    this.sceneR.traverse(object => {\n      if (object.name === 'foot' && object instanceof THREE.Mesh) {\n        object.material = this.footMaterialAlternative;\n        object.material.wireframe = true;\n      }\n    });\n    this.sceneR.background = new THREE.Color(bgColor);\n  }\n\n  addLights = () => {\n    const lights = {\n      ambient: 0x444444,\n      directional: {\n        z: 0.6,\n        intensity: 0.22,\n        color: 0xffffff,\n      },\n    };\n    this.sceneL.add(new THREE.AmbientLight(lights.ambient));\n\n    // spotlights\n    const z:         number = lights.directional.z;\n    const intensity: number = lights.directional.intensity;\n    const color:     number = lights.directional.color;\n\n    const createDirectionalLight = (color: number, intensity: number, x: number, y: number, z: number) => {\n      const directionalLight = new THREE.DirectionalLight(color, intensity);\n      directionalLight.position.set(x, y, z);\n      return directionalLight;\n    }\n\n    this.sceneL.add(createDirectionalLight(color, intensity, -0.3, -0.3, z));\n    this.sceneL.add(createDirectionalLight(color, intensity,  0.3, -0.3, z));\n    this.sceneL.add(createDirectionalLight(color, intensity, -0.3,  0.3, z));\n    this.sceneL.add(createDirectionalLight(color, intensity,  0.3,  0.3, z));\n  }\n\n  loadAllFeet = async () => {\n    await Promise.all([\n      this.loadFootMesh('left'),\n      this.loadFootMesh('right'),\n    ]);\n    await this.loadScene();\n  }\n\n  loadFootMesh = async (side: 'left' | 'right') => {\n    const blobUrl = `./models/${side}.obj`;\n    const loader = new OBJLoader();\n    try {\n      const object: THREE.Object3D = await new Promise(resolve =>\n        (loader as any).load(blobUrl, object => resolve(object)));\n      object.traverse(mesh => {\n        if (mesh instanceof THREE.Mesh) {\n          mesh.name = 'foot';\n          mesh.userData = { side };\n          mesh.material = this.footMaterial;\n          mesh.material.opacity = 1.0;\n          mesh.material.transparent = true;\n        }\n      });\n      object.userData = { side };\n      this.baseFootRoot[side].add(object);\n    } catch (error) {\n      console.error('load foot mesh failed', error);\n    }\n  }\n\n  loadScene = async () => {\n    const blobUrl = `./models/scene.json`;\n    try {\n      const response = await fetch(blobUrl);\n      if (!response.ok) {\n        throw Error(response.statusText);\n      }\n      const data = await response.json();\n      const matrixL = parseMatrix(data.world_from_foot.left);\n      this.baseFootRoot.left.children.forEach(foot => {\n        foot.matrix = matrixL;\n        foot.matrixAutoUpdate = false;\n      });\n      const matrixR = parseMatrix(data.world_from_foot.right);\n      this.baseFootRoot.right.children.forEach(foot => {\n        foot.matrix = matrixR;\n        foot.matrixAutoUpdate = false;\n      });\n    } catch (error) {\n      console.error('load scene json failed', error);\n    }\n  }\n\n  updateRendererSize() {\n    const container = this.container;\n    if (!container) {\n      console.warn('Update renderer size failed: canvas not found');\n      return;\n    }\n\n    const width = container.clientWidth;\n    const height = container.clientHeight;\n\n    if (!width || !height) {\n      console.log(`bad dimensions: ${width}x${height}`);\n    } else {\n      this.camera['aspect'] = width / height;\n      this.renderer.setSize(width, height);\n      this.camera.updateProjectionMatrix();\n    }\n  }\n\n  animate = () => {\n    if (!this.container) { return; }\n    const sliderPos = this.viewSlider.getBoundingClientRect().x + 20;\n    this.renderer.setScissor(\n      0,\n      0,\n      sliderPos,\n      window.innerHeight,\n    );\n    this.renderer.render(this.sceneL, this.camera);\n    this.renderer.setScissor(\n      sliderPos,\n      0,\n      window.innerWidth,\n      window.innerHeight,\n    );\n    this.renderer.setScissorTest(true);\n    this.renderer.render(this.sceneR, this.camera);\n    if (this.controls) {\n      this.controls.update();\n    }\n    this.animationFrameId = requestAnimationFrame(() => this.animate());\n  }\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}