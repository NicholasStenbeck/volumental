{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { styles } from \"./Measurements.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Measurements = _ref => {\n  _s();\n  let {\n    measurements\n  } = _ref;\n  const [selectedMeasurement, setSelectedMeasurement] = React.useState(null);\n  const isSelectedMeasurement = i => {\n    return selectedMeasurement === i;\n  };\n  const isActiveValue = (measurement, value) => {\n    const measurementValue = measurement.active;\n    return measurementValue === value;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: measurements.map((measurement, i) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${styles.measurement} ${isSelectedMeasurement(i) ? \"selected\" : \"\"}`,\n        onClick: () => setSelectedMeasurement(i),\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: styles.measurementTitle,\n          children: measurement.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: styles.measurementSubtitle,\n          children: measurement.subTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: styles.measurementValues,\n          children: measurement.values.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: `${isActiveValue(measurement, value) ? \"active\" : \"\"}`,\n            children: value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this)]\n      }, measurement.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Measurements, \"tIIAPT0m8aYV4qaYACXFhSxJHSo=\");\n_c = Measurements;\nvar _c;\n$RefreshReg$(_c, \"Measurements\");","map":{"version":3,"names":["React","styles","Measurements","measurements","selectedMeasurement","setSelectedMeasurement","useState","isSelectedMeasurement","i","isActiveValue","measurement","value","measurementValue","active","container","map","measurementTitle","title","measurementSubtitle","subTitle","measurementValues","values","id"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { styles } from \"./Measurements.styles\";\n\nimport type dummy_measurements from \"dummy_measurements.json\";\n\ntype Measurement = (typeof dummy_measurements.data)[number];\n\ninterface MeasurementsProps {\n  measurements: Measurement[];\n}\n\nexport const Measurements: React.FC<MeasurementsProps> = ({\n  measurements,\n}: MeasurementsProps) => {\n  const [selectedMeasurement, setSelectedMeasurement] = React.useState<\n    number | null\n  >(null);\n\n  const isSelectedMeasurement = (i: number) => {\n    return selectedMeasurement === i;\n  };\n\n  const isActiveValue = (measurement: Measurement, value: string) => {\n    const measurementValue = measurement.active;\n    return measurementValue === value;\n  };\n\n  return (\n    <div className={styles.container}>\n      {measurements.map((measurement, i) => {\n        return (\n          <div\n            className={`${styles.measurement} ${\n              isSelectedMeasurement(i) ? \"selected\" : \"\"\n            }`}\n            key={measurement.id}\n            onClick={() => setSelectedMeasurement(i)}\n          >\n            <h2 className={styles.measurementTitle}>{measurement.title}</h2>\n            <p className={styles.measurementSubtitle}>{measurement.subTitle}</p>\n            <ul className={styles.measurementValues}>\n              {measurement.values.map((value) => (\n                <li\n                  className={`${\n                    isActiveValue(measurement, value) ? \"active\" : \"\"\n                  }`}\n                >\n                  {value}\n                </li>\n              ))}\n            </ul>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n"],"mappings":";;AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,SAASC,MAAM,QAAQ,uBAAuB;AAAC;AAU/C,OAAO,MAAMC,YAAyC,GAAG,QAEhC;EAAA;EAAA,IAFiC;IACxDC;EACiB,CAAC;EAClB,MAAM,CAACC,mBAAmB,EAAEC,sBAAsB,CAAC,GAAGL,KAAK,CAACM,QAAQ,CAElE,IAAI,CAAC;EAEP,MAAMC,qBAAqB,GAAIC,CAAS,IAAK;IAC3C,OAAOJ,mBAAmB,KAAKI,CAAC;EAClC,CAAC;EAED,MAAMC,aAAa,GAAG,CAACC,WAAwB,EAAEC,KAAa,KAAK;IACjE,MAAMC,gBAAgB,GAAGF,WAAW,CAACG,MAAM;IAC3C,OAAOD,gBAAgB,KAAKD,KAAK;EACnC,CAAC;EAED,oBACE;IAAK,SAAS,EAAEV,MAAM,CAACa,SAAU;IAAA,UAC9BX,YAAY,CAACY,GAAG,CAAC,CAACL,WAAW,EAAEF,CAAC,KAAK;MACpC,oBACE;QACE,SAAS,EAAG,GAAEP,MAAM,CAACS,WAAY,IAC/BH,qBAAqB,CAACC,CAAC,CAAC,GAAG,UAAU,GAAG,EACzC,EAAE;QAEH,OAAO,EAAE,MAAMH,sBAAsB,CAACG,CAAC,CAAE;QAAA,wBAEzC;UAAI,SAAS,EAAEP,MAAM,CAACe,gBAAiB;UAAA,UAAEN,WAAW,CAACO;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM,eAChE;UAAG,SAAS,EAAEhB,MAAM,CAACiB,mBAAoB;UAAA,UAAER,WAAW,CAACS;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAK,eACpE;UAAI,SAAS,EAAElB,MAAM,CAACmB,iBAAkB;UAAA,UACrCV,WAAW,CAACW,MAAM,CAACN,GAAG,CAAEJ,KAAK,iBAC5B;YACE,SAAS,EAAG,GACVF,aAAa,CAACC,WAAW,EAAEC,KAAK,CAAC,GAAG,QAAQ,GAAG,EAChD,EAAE;YAAA,UAEFA;UAAK;YAAA;YAAA;YAAA;UAAA,QAET;QAAC;UAAA;UAAA;UAAA;QAAA,QACC;MAAA,GAfAD,WAAW,CAACY,EAAE;QAAA;QAAA;QAAA;MAAA,QAgBf;IAEV,CAAC;EAAC;IAAA;IAAA;IAAA;EAAA,QACE;AAEV,CAAC;AAAC,GA7CWpB,YAAyC;AAAA,KAAzCA,YAAyC;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}