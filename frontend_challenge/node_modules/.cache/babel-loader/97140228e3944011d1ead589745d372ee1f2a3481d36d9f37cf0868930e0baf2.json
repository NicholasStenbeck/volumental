{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/index.tsx\";\nimport { css } from \"@emotion/css\";\nimport * as THREE from \"three\";\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport { FeetScanPlaceholder } from \"./components/FeetScanPlaceholder\";\nimport \"./index.css\";\nimport { rootElement } from \"rootElement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: css`\n    background: #f6f6f6;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    position: absolute;\n    font-family: \"Lato\", sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n  `,\n  content: css`\n    height: 100%;\n    position: relative;\n  `\n};\nconst ScanPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: styles.container,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: /*#__PURE__*/_jsxDEV(FeetScanPlaceholder, {\n      sceneLBackground: new THREE.Color(0x185984),\n      sceneRBackground: new THREE.Color(0x333333),\n      cameraPosition: {\n        x: 0.3,\n        y: 0.5,\n        z: 0.2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 30,\n  columnNumber: 3\n}, this);\n_c = ScanPage;\nconst root = createRoot(rootElement);\nroot.render( /*#__PURE__*/_jsxDEV(ScanPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 47,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"ScanPage\");","map":{"version":3,"names":["css","THREE","React","createRoot","FeetScanPlaceholder","rootElement","styles","container","content","ScanPage","Color","x","y","z","root","render"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/index.tsx"],"sourcesContent":["import { css } from \"@emotion/css\";\nimport * as THREE from \"three\";\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport dummy_measurements from \"./dummy_measurements.json\";\nimport { FeetScanPlaceholder } from \"./components/FeetScanPlaceholder\";\nimport \"./index.css\";\nimport { rootElement } from \"rootElement\";\nimport { Measurements } from \"components/Measurements\";\n\nconst styles = {\n  container: css`\n    background: #f6f6f6;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    position: absolute;\n    font-family: \"Lato\", sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n  `,\n  content: css`\n    height: 100%;\n    position: relative;\n  `,\n};\n\nconst ScanPage: React.FC = () => (\n  <div className={styles.container}>\n    <div className={styles.content}>\n      <FeetScanPlaceholder\n        sceneLBackground={new THREE.Color(0x185984)}\n        sceneRBackground={new THREE.Color(0x333333)}\n        cameraPosition={{\n          x: 0.3,\n          y: 0.5,\n          z: 0.2,\n        }}\n      />\n      {/*<Measurements measurements={dummy_measurements.data} />*/}\n    </div>\n  </div>\n);\n\nconst root = createRoot(rootElement);\nroot.render(<ScanPage />);\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,kBAAkB;AAE7C,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,OAAO,aAAa;AACpB,SAASC,WAAW,QAAQ,aAAa;AAAC;AAG1C,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAEP,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACDQ,OAAO,EAAER,GAAI;AACf;AACA;AACA;AACA,CAAC;AAED,MAAMS,QAAkB,GAAG,mBACzB;EAAK,SAAS,EAAEH,MAAM,CAACC,SAAU;EAAA,uBAC/B;IAAK,SAAS,EAAED,MAAM,CAACE,OAAQ;IAAA,uBAC7B,QAAC,mBAAmB;MAClB,gBAAgB,EAAE,IAAIP,KAAK,CAACS,KAAK,CAAC,QAAQ,CAAE;MAC5C,gBAAgB,EAAE,IAAIT,KAAK,CAACS,KAAK,CAAC,QAAQ,CAAE;MAC5C,cAAc,EAAE;QACdC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE;MACL;IAAE;MAAA;MAAA;MAAA;IAAA;EACF;IAAA;IAAA;IAAA;EAAA;AAEE;EAAA;EAAA;EAAA;AAAA,QAET;AAAC,KAfIJ,QAAkB;AAiBxB,MAAMK,IAAI,GAAGX,UAAU,CAACE,WAAW,CAAC;AACpCS,IAAI,CAACC,MAAM,eAAC,QAAC,QAAQ;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}