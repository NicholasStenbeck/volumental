{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/index.tsx\";\nimport { css } from \"@emotion/css\";\nimport * as THREE from \"three\";\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport * as dummy_measurements from \"./dummy_measurements.json\";\nimport { FeetScanPlaceholder } from \"./components/FeetScanPlaceholder\";\nimport \"./index.css\";\nimport { Measurements } from \"components/Measurements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = {\n  container: css`\n    background: #f6f6f6;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    position: absolute;\n    font-family: \"Lato\", sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n  `,\n  content: css`\n    height: 100%;\n  `\n};\nconst ScanPage = () => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: styles.container,\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.content,\n    children: [/*#__PURE__*/_jsxDEV(FeetScanPlaceholder, {\n      sceneLBackground: new THREE.Color(0x185984),\n      sceneRBackground: new THREE.Color(0x333333),\n      cameraPosition: {\n        x: 0.3,\n        y: 0.5,\n        z: 0.2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Measurements, {\n      measurements: dummy_measurements.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 3\n}, this);\n\n/**\n * Since we are using React 18, we can save our root element for global event listeners.\n * This will stop us from having conflicts with other React apps on the page if this\n * is used as a component in a larger app.\n */\n_c = ScanPage;\nexport const rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\nroot.render( /*#__PURE__*/_jsxDEV(ScanPage, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 52,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"ScanPage\");","map":{"version":3,"names":["css","THREE","React","createRoot","dummy_measurements","FeetScanPlaceholder","Measurements","styles","container","content","ScanPage","Color","x","y","z","data","rootElement","document","getElementById","root","render"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/index.tsx"],"sourcesContent":["import { css } from \"@emotion/css\";\nimport * as THREE from \"three\";\nimport * as React from \"react\";\nimport { createRoot } from \"react-dom/client\";\nimport * as dummy_measurements from \"./dummy_measurements.json\";\nimport { FeetScanPlaceholder } from \"./components/FeetScanPlaceholder\";\nimport \"./index.css\";\nimport { Measurements } from \"components/Measurements\";\n\nconst styles = {\n  container: css`\n    background: #f6f6f6;\n    top: 0;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    position: absolute;\n    font-family: \"Lato\", sans-serif;\n    font-weight: 300;\n    overflow: hidden;\n  `,\n  content: css`\n    height: 100%;\n  `,\n};\n\nconst ScanPage: React.FC = () => (\n  <div className={styles.container}>\n    <div className={styles.content}>\n      <FeetScanPlaceholder\n        sceneLBackground={new THREE.Color(0x185984)}\n        sceneRBackground={new THREE.Color(0x333333)}\n        cameraPosition={{\n          x: 0.3,\n          y: 0.5,\n          z: 0.2,\n        }}\n      />\n      <Measurements measurements={dummy_measurements.data} />\n    </div>\n  </div>\n);\n\n/**\n * Since we are using React 18, we can save our root element for global event listeners.\n * This will stop us from having conflicts with other React apps on the page if this\n * is used as a component in a larger app.\n */\nexport const rootElement = document.getElementById(\"root\")!;\n\nconst root = createRoot(rootElement);\nroot.render(<ScanPage />);\n"],"mappings":";AAAA,SAASA,GAAG,QAAQ,cAAc;AAClC,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,OAAO,KAAKC,kBAAkB,MAAM,2BAA2B;AAC/D,SAASC,mBAAmB,QAAQ,kCAAkC;AACtE,OAAO,aAAa;AACpB,SAASC,YAAY,QAAQ,yBAAyB;AAAC;AAEvD,MAAMC,MAAM,GAAG;EACbC,SAAS,EAAER,GAAI;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;EACDS,OAAO,EAAET,GAAI;AACf;AACA;AACA,CAAC;AAED,MAAMU,QAAkB,GAAG,mBACzB;EAAK,SAAS,EAAEH,MAAM,CAACC,SAAU;EAAA,uBAC/B;IAAK,SAAS,EAAED,MAAM,CAACE,OAAQ;IAAA,wBAC7B,QAAC,mBAAmB;MAClB,gBAAgB,EAAE,IAAIR,KAAK,CAACU,KAAK,CAAC,QAAQ,CAAE;MAC5C,gBAAgB,EAAE,IAAIV,KAAK,CAACU,KAAK,CAAC,QAAQ,CAAE;MAC5C,cAAc,EAAE;QACdC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE,GAAG;QACNC,CAAC,EAAE;MACL;IAAE;MAAA;MAAA;MAAA;IAAA,QACF,eACF,QAAC,YAAY;MAAC,YAAY,EAAEV,kBAAkB,CAACW;IAAK;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA;AACnD;EAAA;EAAA;EAAA;AAAA,QAET;;AAED;AACA;AACA;AACA;AACA;AAJA,KAjBML,QAAkB;AAsBxB,OAAO,MAAMM,WAAW,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAE;AAE3D,MAAMC,IAAI,GAAGhB,UAAU,CAACa,WAAW,CAAC;AACpCG,IAAI,CAACC,MAAM,eAAC,QAAC,QAAQ;EAAA;EAAA;EAAA;AAAA,QAAG,CAAC;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}