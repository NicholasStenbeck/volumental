{"ast":null,"code":"var _jsxFileName = \"/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { styles } from \"./Measurements.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Measurements = _ref => {\n  _s();\n  let {\n    measurements\n  } = _ref;\n  const [selectedMeasurement, setSelectedMeasurement] = React.useState(null);\n  const isSelectedMeasurement = i => {\n    return selectedMeasurement === i;\n  };\n  const isActiveValue = (measurement, value) => {\n    const measurementValue = measurement.active;\n    return measurementValue === value;\n  };\n  const getDeviationPosition = (measurement, foot) => {\n    const deviation = foot === \"left\" ? measurement.leftDeviation : measurement.rightDeviation;\n    const basePosition = 0.5;\n    return `${(basePosition + deviation) * 100}%`;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: measurements.map((measurement, i) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `${styles.measurement} ${isSelectedMeasurement(i) ? \"selected\" : \"\"}`,\n          onClick: () => setSelectedMeasurement(i),\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: styles.measurementTitle,\n            children: measurement.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: styles.measurementSubtitle,\n            children: measurement.subTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: styles.measurementValues,\n            children: measurement.values.map(value => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: styles.measurementValue,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: `content ${isActiveValue(measurement, value) ? \"active\" : \"\"}`,\n                children: value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, this), isActiveValue(measurement, value) && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"left\",\n                  style: {\n                    left: getDeviationPosition(measurement, \"left\")\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.caretDown\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"right\",\n                  style: {\n                    left: getDeviationPosition(measurement, \"right\")\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: styles.caretUp\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"Right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 86,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, measurement.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Measurements, \"tIIAPT0m8aYV4qaYACXFhSxJHSo=\");\n_c = Measurements;\nvar _c;\n$RefreshReg$(_c, \"Measurements\");","map":{"version":3,"names":["React","styles","Measurements","measurements","selectedMeasurement","setSelectedMeasurement","useState","isSelectedMeasurement","i","isActiveValue","measurement","value","measurementValue","active","getDeviationPosition","foot","deviation","leftDeviation","rightDeviation","basePosition","container","map","measurementTitle","title","measurementSubtitle","subTitle","measurementValues","values","left","caretDown","caretUp","id"],"sources":["/Users/nicholasstenbeck/Documents/Job/repo.nosync/volumental/frontend_challenge/src/components/Measurements/Measurements.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { styles } from \"./Measurements.styles\";\n\nimport type dummy_measurements from \"dummy_measurements.json\";\n\ntype Measurement = (typeof dummy_measurements.data)[number];\n\ninterface MeasurementsProps {\n  measurements: Measurement[];\n}\n\nexport const Measurements: React.FC<MeasurementsProps> = ({\n  measurements,\n}: MeasurementsProps) => {\n  const [selectedMeasurement, setSelectedMeasurement] = React.useState<\n    number | null\n  >(null);\n\n  const isSelectedMeasurement = (i: number) => {\n    return selectedMeasurement === i;\n  };\n\n  const isActiveValue = (measurement: Measurement, value: string) => {\n    const measurementValue = measurement.active;\n    return measurementValue === value;\n  };\n\n  const getDeviationPosition = (\n    measurement: Measurement,\n    foot: \"left\" | \"right\"\n  ) => {\n    const deviation =\n      foot === \"left\" ? measurement.leftDeviation : measurement.rightDeviation;\n    const basePosition = 0.5;\n    return `${(basePosition + deviation) * 100}%`;\n  };\n\n  return (\n    <>\n      <div className={styles.container}>\n        {measurements.map((measurement, i) => {\n          return (\n            <div\n              className={`${styles.measurement} ${\n                isSelectedMeasurement(i) ? \"selected\" : \"\"\n              }`}\n              key={measurement.id}\n              onClick={() => setSelectedMeasurement(i)}\n            >\n              <h2 className={styles.measurementTitle}>{measurement.title}</h2>\n              <p className={styles.measurementSubtitle}>\n                {measurement.subTitle}\n              </p>\n              <ul className={styles.measurementValues}>\n                {measurement.values.map((value) => (\n                  <li className={styles.measurementValue}>\n                    <span\n                      className={`content ${\n                        isActiveValue(measurement, value) ? \"active\" : \"\"\n                      }`}\n                    >\n                      {value}\n                    </span>\n                    {isActiveValue(measurement, value) && (\n                      <>\n                        {/**\n                         * Use dynamic styles inline, as per Emotion docs: https://emotion.sh/docs/best-practices#use-the-style-prop-for-dynamic-styles\n                         * Best case for React would be using @emotion/styled.\n                         */}\n                        <span\n                          className=\"left\"\n                          style={{\n                            left: getDeviationPosition(measurement, \"left\"),\n                          }}\n                        >\n                          <p>Left</p>\n                          <span className={styles.caretDown} />\n                        </span>\n                        <span\n                          className=\"right\"\n                          style={{\n                            left: getDeviationPosition(measurement, \"right\"),\n                          }}\n                        >\n                          <span className={styles.caretUp} />\n                          <p>Right</p>\n                        </span>\n                      </>\n                    )}\n                  </li>\n                ))}\n              </ul>\n            </div>\n          );\n        })}\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}